/*
 * moutis_combos.dtsi
 *
 * SPDX-License-Identifier: MIT
 *
 * common/location based combos (cut/copy/paste, esc, app, etc.)
 *
 * Some combos need to be in specific places depending on
 * the underlying alpha, esp H-Digraph combos, so they are
 * defined in the individual ##-combo.dtsi file.
 */

#define COMBO_LAYER(NAME, BINDINGS, KEYPOS, LAYERS) \
  combo_##NAME { \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <LAYERS>; \
    slow-release; \
    timeout-ms = <45>; \
};
#define COMBO_ANY(NAME, BINDINGS, KEYPOS) \
  combo_##NAME { \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    timeout-ms = <45>; \
};

/*                       UNIVERSAL KEY POSITION NAMES
 *          alphas & combos limited to 3x5+2 common core
 *
 * FRA   FR1 FR2 FR3 FR4 FR5                      FR6 FR7 FR8 FR9 FR0   FRB
 * NRA   NR1 NR2 NR3 NR4 NR5                      NR6 NR7 NR8 NR9 NR0   NRB
 *     ╭─────────────────────╮                  ╭─────────────────────╮
 * LT5 │     LT3 LT2 LT1 LT0 │ LTA          RTA │ RT0 RT1 RT2 RT3     │ RT5
 * LM5 │ LM4 LM3 LM2 LM1 LM0 │ LMA          RMA │ RM0 RM1 RM2 RM3 RM4 │ RM5
 * LB5 │ LB3 LB2 LB1 LB0     │ LBA LBB  RBB RBA │     RB0 RB1 RB2 RB3 │ RB5
 *     ╰────────────╮LH2 LH1 | LH0 LHA  RHA RH0 | RH1 RH2╭────────────╯
 *      LH5 LH4 LH3 ╰────────╯                  ╰────────╯ RH3 RH4 LH5
*/


/* control & modes */

COMBO_ANY(cfgL,      &mo l_cfg,     LH2 LH1)        // get the settings/media layer from anywhere
COMBO_ANY(cfgR,      &mo l_cfg,     RH1 RH2)
COMBO_ANY(numpad,    &num_word l_num,    LH1 RH1)
COMBO_ANY(appswitch, &SlAppy,       LT1 LT0)        // App switch
COMBO_LAYER(docaps,  &caps_word,    RB2 RB3, l_hd)  // CAPSWORD
COMBO_LAYER(capslk,  &kp CAPS,      RB1 RB2 RB3, l_hd) // CAPS LOCK


/* Editing actions (&whitespace) */

COMBO_ANY(Gent,      &kp LG(RETURN), LM0 LB1 LB0)
COMBO_ANY(entr,      &kp RETURN,     LM0 LB0)

COMBO_ANY(spce,      &kp SPACE,      LM1 LM0)
COMBO_ANY(esc,       &kp ESC,        LM4 LM1)

COMBO_ANY(sall,      &kp LG(A),      LB3 LB0)

COMBO_ANY(redo,      &kp LG(Z),  LB3 LB2 LB1)
COMBO_ANY(copy,      &lk LG(X) LG(C), LB2 LB1)
COMBO_ANY(pste,      &lk LG(LS(LA(V))) LG(V), LB1 LB0)



/* type a glyph, with lingers (tiny board accommodation) */

COMBO_LAYER(t_Coln,  &lk LA(SEMI) COLON,    RT1 RT3, l_hd)
COMBO_LAYER(t_Semi,  &kp SEMI,              RM0 RM1, l_hd)
COMBO_LAYER(t_Excl,  &kp EXCL,              RT1 RT2, l_hd)
COMBO_LAYER(t_Ques,  &kp QMARK,             RT2 RT3, l_hd)

COMBO_LAYER(t_atMk,  &lk LS(LA(SEMI)) AT_SIGN,  RT0 RT1, l_hd)   // @ (№ if held)
COMBO_LAYER(t_Under, &kp UNDER,             RB0 RB2, l_hd)       // _
COMBO_LAYER(t_Equal, &lk PRCNT EQUAL,       RB1 RB2, l_hd)       // = (percent if held)



/* numpad symbol combos */

COMBO_LAYER(numLPRN,    &kp LPAR,           RM1 RM2, l_num)
COMBO_LAYER(numRPRN,    &kp RPAR,           RM2 RM3, l_num)
COMBO_LAYER(numEQUAL,   &kp EQUAL,          RM3 RM4, l_num)
COMBO_LAYER(numCOLN,    &kp COLON,          RM1 RM3, l_num)

// CONTINUE FROM HERE

COMBO_LAYER(numPRCNT,   &kp PRCNT,          RB3 RB4, l_num)
COMBO_LAYER(numLT,      &kp LT,             RM0 RM1, l_num)
COMBO_LAYER(numGT,      &kp GT,             RM0 RM4, l_num)
COMBO_LAYER(numDASH,    &kp LA(MINUS),      RB0 RB1, l_num)
COMBO_LAYER(numTILD,    &kp TILDE,          RB0 RB4, l_num)
COMBO_LAYER(numELIP,    &kp LA(SEMI),       RB1 RB4, l_num)

COMBO_LAYER(numDLLR,    &kp DLLR,           RT1 RT2, l_num) // $
COMBO_LAYER(numCENT,    &kp LA(N4),         RT0 RT1, l_num) // ¢
COMBO_LAYER(numEURO,    &kp LS(LA(N2)),     RT2 RT3, l_num) // €
COMBO_LAYER(numYEN,     &kp LA(Y),          RT3 RT4, l_num) // ¥
COMBO_LAYER(numBPND,    &kp LA(N3),         RT1 RT3, l_num) // £

/*
 *
 * Three finger text macros (tap & hold varieties)
 *
 */
// On the English layer it's one thing
COMBO_LAYER(l_hd_LText, &lk_L_textE 0 0,    LT3 LT2 LT1, l_hd)
COMBO_LAYER(l_hd_RText, &lk_R_textE 0 0,    RT1 RT2 RT3, l_hd)

/*
* #ifdef JP_MODE_ENABLE
* // On the Japanese layer it's another
* COMBO_LAYER(l_jp_LText, &lk_L_textJ 0 0,    LT3 LT2 LT1, l_jp)
* COMBO_LAYER(l_jp_RText, &lk_R_textJ 0 0,    RT1 RT2 RT3, l_jp)
* #endif
*/
